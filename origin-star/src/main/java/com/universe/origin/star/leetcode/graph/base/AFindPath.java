package com.universe.origin.star.leetcode.graph.base;

/**
 * A*寻路算法
 * 启发式算法
 * 作为程序员的我们可能经常会听到 A*搜索算法这个的词，听起来非常高大上，腻害，但是具体是什么呢？
 *
 * 引用 Wiki 上的说法就是：
 * A* 搜索算法（A* search algorithm）是一种在图形平面上，有多个节点的路径，求出最低通过成本的算法。常用于游戏中的NPC的移动计算，或网络游戏的BOT的移动计算上。
 *
 * 该算法综合了最良优先搜索和Dijkstra算法的优点：在进行启发式搜索提高算法效率的同时，可以保证找到一条最优路径（基于评估函数）。
 *
 * 在此算法中，如果以 g ( n ) g(n)g(n) 表示从起点到当前顶点 n nn 的实际距离，h ( n ) h(n)h(n)表示当前顶点 n nn 到目标顶点的估算距离（根据所采用的评估函数的不同而变化），那么A*算法的估算函数为：
 *
 * f ( n ) = g ( n ) + h ( n ) f(n)=g(n)+h(n)f(n)=g(n)+h(n)
 *
 * f ( n ) f(n)f(n)：代表了该节点的综合预估值，值越小，到达目标的成本就越小，所以访问的时候尽量优先考虑最小的。
 *
 * 这里的h ( n ) h(n)h(n)值可以采用 欧几里得距离、曼哈顿距离、切比雪夫距离等公式计算而来。

 */
public class AFindPath {
    public static void main(String[] args) {

    }
}
